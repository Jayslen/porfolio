---
import AstroLogo from './Icons/AstroLogo.astro'
import GithubLogo from './Icons/GithubLogo.astro'
import GithubIcon from './Icons/GithubLogo.astro'
import NodeJSLogo from './Icons/NodeJSLogo.astro'
import ReactLogo from './Icons/ReactLogo.astro'
import ReactRouterDomLogo from './Icons/ReactRouterDomLogo.astro'
import TailwindLogo from './Icons/TailwindLogo.astro'
import WebLogo from './Icons/WebLogo.astro'
import LinkComponent from './LinkComponent.astro'

const STACK = {
  react: {
    name: 'React',
    Logo: ReactLogo,
    textColor: '#fff',
    bgColor: '#1a7ca0',
  },
  astro: {
    name: 'Astro',
    Logo: AstroLogo,
    textColor: '#fff',
    bgColor: '#ff9532',
  },
  tailwind: {
    name: 'Tailwind',
    Logo: TailwindLogo,
    textColor: '#fff',
    bgColor: '#307b8a',
  },
  reactRouter: {
    name: 'ReactRouter',
    Logo: ReactRouterDomLogo,
    textColor: '#fff',
    bgColor: '#ff5b6f',
  },
  nodeJs: {
    name: 'NodeJs',
    Logo: NodeJSLogo,
    textColor: '#fff',
    bgColor: '#567b2e',
  },
}

const { title, description, image, stack, repository, webSite } = Astro.props

const stackLogo = stack.map((data) => STACK[data])
---

<li
  class="overflow-hidden transition-all duration-300 w-full rounded-xl bg-opacity-50"
>
  <img
    src={image[0]}
    alt={`Imagen sobre el proyecto ${title}`}
    class="rounded-xl w-full h-[270px] object-cover"
  />

  <article>
    <h2 class="font-black text-2xl">{title}</h2>
    <ul class="flex gap-1">
      {
        stackLogo.map((data) => (
          <li
            style={`background-color: ${data.bgColor}; color:${data.textColor}`}
            class="flex items-center gap-1 text-cod-gray-100 rounded-full px-2"
          >
            <span class="italic text-xs">{data.name}</span>
            <div class="w-5">
              <data.Logo />
            </div>
          </li>
        ))
      }
    </ul>

    <p class="line-clamp-3 max-w-xl">{description}</p>

    <footer class="flex gap-2 my-3.5">
      {
        repository && (
          <LinkComponent link={repository} text="Github">
            <GithubIcon />
          </LinkComponent>
        )
      }
      {
        webSite && (
          <LinkComponent link={webSite} text="Preview">
            <WebLogo />
          </LinkComponent>
        )
      }
    </footer>
  </article>
</li>

<!-- <style>
  .container {
    animation-name: carousel;
    animation-duration: var(--animation-time, 2s);
    animation-direction: alternate;
    animation-iteration-count: infinite;
    animation-play-state: paused;
    animation-fill-mode: forwards;
  }

  .container:hover {
    animation-play-state: running;
  }

  @keyframes carousel {
    0% {
      transform: translateX(0);
    }

    100% {
      transform: translateX(var(--translate));
    }
  }
</style> -->
